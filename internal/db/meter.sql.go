// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: meter.sql

package db

import (
	"context"
)

const bulkCreateMeters = `-- name: BulkCreateMeters :exec
INSERT INTO meter (name)
SELECT DISTINCT name
FROM UNNEST($1::text[]) AS name
ON CONFLICT DO NOTHING
`

// BulkCreateMeters creates Meter rows in bulk with the minimum required columns. If a row with the given primary key already exists, that input item is ignored.
func (q *Queries) BulkCreateMeters(ctx context.Context, names []string) error {
	_, err := q.db.Exec(ctx, bulkCreateMeters, names)
	return err
}

const createMeter = `-- name: CreateMeter :one
INSERT INTO meter (name)
VALUES ($1)
RETURNING name
`

func (q *Queries) CreateMeter(ctx context.Context, name string) (string, error) {
	row := q.db.QueryRow(ctx, createMeter, name)
	err := row.Scan(&name)
	return name, err
}
