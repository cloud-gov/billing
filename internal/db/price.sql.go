// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: price.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createPriceWithID = `-- name: CreatePriceWithID :one
INSERT INTO price (id, meter, kind_natural_id, unit_of_measure, microcredits_per_unit, valid_during)
VALUES ($1, $2, $3, $4, $5, $6)
RETURNING id, meter, kind_natural_id, unit_of_measure, microcredits_per_unit, valid_during
`

type CreatePriceWithIDParams struct {
	ID                  int32
	Meter               string
	KindNaturalID       string
	UnitOfMeasure       pgtype.Text
	MicrocreditsPerUnit pgtype.Int8
	ValidDuring         pgtype.Range[pgtype.Timestamptz]
}

func (q *Queries) CreatePriceWithID(ctx context.Context, arg CreatePriceWithIDParams) (Price, error) {
	row := q.db.QueryRow(ctx, createPriceWithID,
		arg.ID,
		arg.Meter,
		arg.KindNaturalID,
		arg.UnitOfMeasure,
		arg.MicrocreditsPerUnit,
		arg.ValidDuring,
	)
	var i Price
	err := row.Scan(
		&i.ID,
		&i.Meter,
		&i.KindNaturalID,
		&i.UnitOfMeasure,
		&i.MicrocreditsPerUnit,
		&i.ValidDuring,
	)
	return i, err
}
