jobs:
  - name: set-self
    plan:
      - get: src
        trigger: true
      - set_pipeline: self
        file: src/ci/pipeline.yml

  - name: terraform-plan-billing-development
    plan:
      - in_parallel:
          - get: terraform-plugin-cache
            trigger: false
          - get: terraform-templates
            resource: terraform-config
            trigger: true # Changes to the terraform deployment code trigger a rebuild
          - get: src
            resource: src
            trigger: true # App code changes trigger a rebuild
            passed: [set-self]
          - get: pipeline-tasks
          - get: general-task
      - task: terraform-plan
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params: &tf-billing-development
          TERRAFORM_ACTION: plan
          TEMPLATE_SUBDIR: ci/terraform/stack
          STACK_NAME: billing-development # Where TF state will be stored
          S3_TFSTATE_BUCKET: ((tf-state-bucket))
          AWS_DEFAULT_REGION: ((aws-region))
          AWS_USE_FIPS_ENDPOINT: true
          CF_API_URL: ((dev-cf-api-url))
          CF_CLIENT_ID: ((deploy-billing-cf-client-id))
          CF_CLIENT_SECRET: ((deploy-billing-cf-client-secret-development))
          TF_UPDATE_PLUGIN_CACHE: true
          TF_VAR_base_domain: ((base-domain-development))
          TF_VAR_environment:
            CF_API_URL: ((dev-cf-api-url))
            CF_CLIENT_ID: ((billing-cf-client-id))
            CF_CLIENT_SECRET: ((billing-cf-client-secret-development))
            OIDC_ISSUER: ((oidc-issuer-development))
          TF_VAR_org_name: ((org-name))
          TF_VAR_path: ../../.. # terraform-templates, relative to TEMPLATE_SUBDIR, where terraform executes
          TF_VAR_space_name: ((space-name))
      - put: terraform-plugin-cache
        params:
          file: updated-terraform-plugin-cache/cache.tar.gz

  - name: terraform-apply-billing-development
    plan:
      - in_parallel:
          - get: terraform-plugin-cache
            trigger: false
          - get: terraform-templates
            resource: terraform-config
            trigger: true # Changes to the terraform deployment code trigger a rebuild
          - get: src
            resource: src
            trigger: true # Pipeline changes do not automatically trigger a rebuild
            passed: [terraform-plan-billing-development]
          - get: pipeline-tasks
          - get: general-task
      - task: terraform-apply
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params:
          <<: *tf-billing-development
          TF_UPDATE_PLUGIN_CACHE: false
          TERRAFORM_ACTION: apply
      - task: terraform-cleanup
        image: general-task
        file: terraform-templates/ci/terraform/terraform-cleanup.yml
        params:
          CF_API_URL: ((dev-cf-api-url))
          CF_CLIENT_ID: ((deploy-billing-cf-client-id))
          CF_CLIENT_SECRET: ((deploy-billing-cf-client-secret-development))

  - name: terraform-plan-billing-staging
    plan:
      - in_parallel:
          - get: terraform-plugin-cache
            trigger: false
          - get: terraform-templates
            resource: terraform-config
            trigger: true # Changes to the terraform deployment code trigger a rebuild
          - get: src
            resource: src
            trigger: true # App code changes trigger a rebuild
            passed: [terraform-apply-billing-development]
          - get: pipeline-tasks
          - get: general-task
      - task: terraform-plan
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params: &tf-billing-staging
          TERRAFORM_ACTION: plan
          TEMPLATE_SUBDIR: ci/terraform/stack
          STACK_NAME: billing-staging # Where TF state will be stored
          S3_TFSTATE_BUCKET: ((tf-state-bucket))
          AWS_DEFAULT_REGION: ((aws-region))
          AWS_USE_FIPS_ENDPOINT: true
          CF_API_URL: ((staging-cf-api-url))
          CF_CLIENT_ID: ((deploy-billing-cf-client-id))
          CF_CLIENT_SECRET: ((deploy-billing-cf-client-secret-staging))
          TF_UPDATE_PLUGIN_CACHE: false
          TF_VAR_base_domain: ((base-domain-staging))
          TF_VAR_environment:
            CF_API_URL: ((staging-cf-api-url))
            CF_CLIENT_ID: ((billing-cf-client-id))
            CF_CLIENT_SECRET: ((billing-cf-client-secret-staging))
            OIDC_ISSUER: ((oidc-issuer-staging))
          TF_VAR_org_name: ((org-name))
          TF_VAR_path: ../../.. # terraform-templates, relative to TEMPLATE_SUBDIR, where terraform executes
          TF_VAR_space_name: ((space-name))

  - name: terraform-apply-billing-staging
    plan:
      - in_parallel:
          - get: terraform-plugin-cache
            trigger: false
          - get: terraform-templates
            resource: terraform-config
            trigger: true # Changes to the terraform deployment code trigger a rebuild
          - get: src
            resource: src
            trigger: true # Pipeline changes do not automatically trigger a rebuild
            passed: [terraform-plan-billing-staging]
          - get: pipeline-tasks
          - get: general-task
      - task: terraform-apply
        image: general-task
        file: terraform-templates/ci/terraform/terraform-apply.yml
        params:
          <<: *tf-billing-staging
          TERRAFORM_ACTION: apply
      - task: terraform-cleanup
        image: general-task
        file: terraform-templates/ci/terraform/terraform-cleanup.yml
        params:
          CF_API_URL: ((staging-cf-api-url))
          CF_CLIENT_ID: ((deploy-billing-cf-client-id))
          CF_CLIENT_SECRET: ((deploy-billing-cf-client-secret-staging))

resources:
  - name: pipeline-tasks
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/cg-pipeline-tasks.git
      branch: main

  - name: terraform-config
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/billing.git
      branch: main
      paths:
        - ci/terraform/*

  - name: general-task
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: general-task
      aws_region: us-gov-west-1
      tag: latest

  - name: src
    type: git
    source:
      commit_verification_keys: ((cloud-gov-pgp-keys))
      uri: https://github.com/cloud-gov/billing.git
      branch: main
      paths:
        - ci/*

  - name: terraform-plugin-cache
    type: s3-iam
    source:
      bucket: ((terraform-cache-bucket))
      versioned_file: billing/cache.tar.gz
      region_name: ((aws-region))
      initial_version: "0"
      # Initial contents: An empty directory named 'plugin-cache'.
      # Terraform requires the cache directory to exist, even if empty.
      initial_content_binary: H4sIAHqo3GcAAyvIKU3PzNNNTkzOSNVnoA0wMDAwNzVVANNmENrAyARCQ4GCoYm5mbmhkYmhibGCgaGpqYkJg4IpjdyDAkqLSxKLgE7JSsxNLS7JyE/OSExJzcFUB1SWlobHHKg/4PQoGAWjYBQMcgAA4m+yIwAGAAA=

resource_types:
  - name: registry-image
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: registry-image-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: git
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: git-resource
      aws_region: us-gov-west-1
      tag: latest

  - name: s3-iam
    type: registry-image
    source:
      aws_access_key_id: ((ecr_aws_key))
      aws_secret_access_key: ((ecr_aws_secret))
      repository: s3-resource
      aws_region: us-gov-west-1
      tag: latest
